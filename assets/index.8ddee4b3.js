import{u as i,d as f,a as w,c as u,w as _,o as p,r as h,b as d,e as c,f as A,K as M,g as C,h as g}from"./index.6fc8e0b9.js";function k(t){let n=i();n.accounts=t;let e=n.walletAddress;t.length===0?n.disconnect():t[0]!==e&&(n.setWalletAddress(t[0]),window.location.reload())}function y(){let{ethereum:t}=window,n=i();t&&(t.on("chainChanged",e=>{n.setChainId(e),window.location.reload()}),t.on("accountsChanged",k),t.on("disconnect",()=>{n.disconnect()}))}function m(){return new Promise((t,n)=>{var r;let{ethereum:e}=window,o=i();(r=e==null?void 0:e.request)==null||r.call(e,{method:"eth_requestAccounts"}).then(s=>{var l;if(e!=null&&e.chainId?o.setChainId(e==null?void 0:e.chainId):(l=e==null?void 0:e.request)==null||l.call(e,{method:"eth_chainId"}).then(a=>{(typeof a=="string"||typeof a=="number")&&o.setChainId(a)}),Array.isArray(s)){o.accounts=s,o.setProvider(e),o.setWallet("MetaMask");let a=o.walletAddress;if(s.length===0){n("please connect MetaMask");return}else s[0]!==a&&(o.setWalletAddress(s[0]),y());t(!0)}}).catch(s=>{s.code===4001?n("\u8BF7\u8FDE\u63A5MetaMask"):console.error(s)})})}const v=f({async beforeRouteEnter(t,n,e){window!=null&&window.ethereum&&await m().catch(async()=>!1),e()}}),b=f({...v,__name:"index",setup(t){const n=w();i();let e=u(()=>g().aToken);return _(e,o=>{o&&(console.log(o),n.go(0))}),p(()=>{}),(o,r)=>{const s=h("router-view");return d(),c(s,null,{default:A(({Component:l})=>[(d(),c(M,null,[(d(),c(C(l)))],1024))]),_:1})}}});export{b as default};
