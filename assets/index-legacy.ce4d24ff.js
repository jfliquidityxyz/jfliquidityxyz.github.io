System.register(["./index-legacy.5e02622f.js"],(function(e,t){"use strict";var n,o,s,r,a,c,d,i,l,u,h,w,f;return{setters:[e=>{n=e.u,o=e.d,s=e.a,r=e.c,a=e.w,c=e.o,d=e.r,i=e.b,l=e.e,u=e.f,h=e.K,w=e.g,f=e.h}],execute:function(){function t(e){let t=n();t.accounts=e;let o=t.walletAddress;0===e.length?t.disconnect():e[0]!==o&&(t.setWalletAddress(e[0]),window.location.reload())}function g(){return new Promise(((e,o)=>{let{ethereum:s}=window,r=n();s?.request?.({method:"eth_requestAccounts"}).then((a=>{if(s?.chainId?r.setChainId(s?.chainId):s?.request?.({method:"eth_chainId"}).then((e=>{"string"!=typeof e&&"number"!=typeof e||r.setChainId(e)})),Array.isArray(a)){r.accounts=a,r.setProvider(s),r.setWallet("MetaMask");let c=r.walletAddress;if(0===a.length)return void o("please connect MetaMask");a[0]!==c&&(r.setWalletAddress(a[0]),function(){let{ethereum:e}=window,o=n();e&&(e.on("chainChanged",(e=>{o.setChainId(e),window.location.reload()})),e.on("accountsChanged",t),e.on("disconnect",(()=>{o.disconnect()})))}()),e(!0)}})).catch((e=>{4001===e.code?o("请连接MetaMask"):console.error(e)}))}))}const m=o({async beforeRouteEnter(e,t,n){window?.ethereum?(await g().catch((async()=>!1)),n()):n()}});e("default",o({...m,__name:"index",setup(e){const t=s();n();let o=r((()=>f().aToken));return a(o,(e=>{e&&(console.log(e),t.go(0))})),c((()=>{})),(e,t)=>{const n=d("router-view");return i(),l(n,null,{default:u((({Component:e})=>[(i(),l(h,null,[(i(),l(w(e)))],1024))])),_:1})}}}))}}}));
